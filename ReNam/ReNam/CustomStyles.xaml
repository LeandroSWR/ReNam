<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="#ff2b2b2b" BorderThickness="1,1,1,1" CornerRadius="0">
                                <Border BorderBrush="#44ffffff" BorderThickness="0,0,0,0" CornerRadius="0" Margin="0,0,0,-2">
                                    <Border BorderBrush="#44ffffff" BorderThickness="0,0,0,0" CornerRadius="0" Margin="0,0,0,1" />
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFB7B7B7" Offset="0"/>
                                        <GradientStop Color="#FF9B9B9B" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Rounded TextBoxs-->
    <ControlTemplate x:Key="RoundedTextBoxControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border x:Name="Border"
                BorderThickness="0" CornerRadius="4" VerticalAlignment="Top" HorizontalAlignment="Left" Padding="2,0,2,0">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFFCC00" Offset="0"/>
                    <GradientStop Color="#FFFF9C00" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
    </ControlTemplate>

    <!--Rounded Buttons-->
    <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="4" Background="#FF4C5052" BorderThickness="1" Padding="2" BorderBrush="#FF5E6060">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--GridViewLines-->
    <DataTemplate x:Key="GridViewLines">
        <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
            <StackPanel Margin="6,2,6,2">
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- List Item Template-->
    <DataTemplate x:Key="ListBoxItemCustomTemplate">
        <Grid Height="27">
            <!--Displays the file name-->
            <TextBlock Margin="5,0,0,0" Text="{Binding Name}" VerticalAlignment="Center" FontSize="12"/>
            <!-- Displays the file format-->
            <TextBox x:Name="roundedTextBox" Template="{StaticResource RoundedTextBoxControlTemplate}" 
                     Text="{Binding Path=Format, Mode=OneWay}" Visibility="{Binding Visibility}"
                     HorizontalAlignment="Right" Margin="0,0,5,0" VerticalAlignment="Center" 
                     IsReadOnly="True" IsEnabled="False" FontSize="12">
            </TextBox>
        </Grid>
    </DataTemplate>
    <Style TargetType="ListBox">
        <Setter Property="ItemTemplate" Value="{StaticResource ListBoxItemCustomTemplate}"/>
    </Style>

    <!--Custom Toolbar-->
    <Style x:Key="Toolbar" TargetType="{x:Type ToolBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border x:Name="Border" BorderBrush="#FF535353" BorderThickness="1">
                        <Border.Background>
                            <RadialGradientBrush RadiusX="10" RadiusY="2" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
                                <GradientStop Color="#FF343434" Offset="0.485"/>
                                <GradientStop Color="#FF535353"/>
                                <GradientStop Color="#FF535353" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                        <DockPanel >
                            <ToggleButton Visibility="Collapsed"  DockPanel.Dock="Right" IsEnabled="False" IsChecked="False" ClickMode="Press">
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="false" Focusable="false" PopupAnimation="Slide">
                                    <Border x:Name="DropDownBorder" Background="pink" BorderThickness="1" BorderBrush="pink">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="true"  FocusVisualStyle="{x:Null}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Visibility="Collapsed"/>
                                    </Border>
                                </Popup>
                            </ToggleButton>
                            <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Text First Checkbox-->
    <!--This was needed since just defining the checkbox as right to left would invert the check sprite-->
    <Style x:Key="TextAlignLeft" TargetType="CheckBox">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="FlowDirection" Value="LeftToRight" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="FlowDirection" Value="LeftToRight" />
            </Style>
        </Style.Resources>

        <Setter Property="FlowDirection" Value="RightToLeft" />
    </Style>

</ResourceDictionary>